apply plugin: 'com.android.application'

apply plugin: 'com.google.ar.sceneform.plugin'

sceneform.asset('sampledata/model/alpha_phone/alpha_phone.obj', // 'Source Asset Path' specified during import.
        'default',                    // 'Material Path' specified during import.
        'sampledata/model/alpha_phone/alpha_phone.sfa', // '.sfa Output Path' specified during import.
        'sampledata/model/alpha_phone/alpha_phone')

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"
    lintOptions {
        abortOnError false
    }
    defaultConfig {
        applicationId "com.google.cardboard.hellocardboard"
        minSdkVersion 24 // Sceneform requires minSdkVersion >= 24.
        targetSdkVersion 30
        versionCode 1
        versionName "1.4.1"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                cppFlags.add("-std=c++17")
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    
    implementation project(":sdk")

    // Provides ARCore Session and related resources.
    //implementation 'com.google.ar:core:1.15.0'

    // ARCore (Google Play Services for AR) library.
    implementation 'com.google.ar:core:1.23.0'

    // Obj - a simple Wavefront OBJ file loader
    // https://github.com/javagl/Obj
    implementation 'de.javagl:obj:0.2.1'

    // Provides ArFragment, and other UX resources.
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.15.0'

    // Alternatively, use ArSceneView without the UX dependency.
    implementation 'com.google.ar.sceneform:core:1.15.0'

    implementation 'com.google.ar.sceneform:assets:1.15.0'
}

// The dependencies for NDK builds live inside the .aar files so they need to
// be extracted before NDK targets can link against.
task extractNdk(type: Copy)  {
    if (file("${project.rootDir}/sdk/build/outputs/aar/sdk-release.aar").exists()) {
        copy {
            from zipTree("${project.rootDir}/sdk/build/outputs/aar/sdk-release.aar")
            into "libraries/"
            include "jni/**/libcardboard_api.so"
        }
        copy {
            from "${project.rootDir}/sdk/include/cardboard.h"
            into "libraries/"
        }
    }
}

task deleteNdk(type: Delete) {
    delete "libraries/jni"
    delete "libraries/cardboard.h"
}

build.dependsOn(extractNdk)
clean.dependsOn(deleteNdk)
